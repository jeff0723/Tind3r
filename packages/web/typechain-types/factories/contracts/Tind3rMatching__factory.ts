/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Tind3rMatching,
  Tind3rMatchingInterface,
} from "../../contracts/Tind3rMatching";

const _abi = [
  {
    inputs: [],
    name: "CallerIsOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCallByMembershipContract",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "aUserId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bUserId",
        type: "uint256",
      },
    ],
    name: "Block",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "aUserId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bUserId",
        type: "uint256",
      },
    ],
    name: "Match",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getMatches",
    outputs: [
      {
        internalType: "uint32[]",
        name: "matchedIds",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ITind3rMembership",
        name: "initMembershipContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "membershipContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aUser",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "aUserId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bUser",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bUserId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051612dfe61004c60003960008181610629015281816106690152818161091e0152818161095e01526109f10152612dfe6000f3fe6080604052600436106101295760003560e01c806352d1902d116100ab578063bd85b0391161006f578063bd85b03914610358578063c4d66de814610385578063e985e9c5146103a5578063f242432a146103ee578063f2fde38b1461040e578063f5298aca1461042e57600080fd5b806352d1902d146102c2578063715018a6146102d757806377795778146102ec5780638da5cb5b14610319578063a22cb4651461033857600080fd5b80633c173a4f116100f25780633c173a4f146102005780634e1273f4146102205780634f1ef2861461024d5780634f558e791461026057806351ec8d1e1461028f57600080fd5b8062fdd58e1461012e57806301ffc9a7146101615780630e89341c146101915780632eb2c2d6146101be5780633659cfe6146101e0575b600080fd5b34801561013a57600080fd5b5061014e61014936600461225f565b61044e565b6040519081526020015b60405180910390f35b34801561016d57600080fd5b5061018161017c3660046122a1565b6104e9565b6040519015158152602001610158565b34801561019d57600080fd5b506101b16101ac3660046122be565b610539565b604051610158919061232f565b3480156101ca57600080fd5b506101de6101d936600461249e565b6105d2565b005b3480156101ec57600080fd5b506101de6101fb36600461254c565b61061e565b34801561020c57600080fd5b506101de61021b366004612569565b6106fe565b34801561022c57600080fd5b5061024061023b3660046125b1565b6107e9565b60405161015891906126b9565b6101de61025b3660046126cc565b610913565b34801561026c57600080fd5b5061018161027b3660046122be565b600090815260fb6020526040902054151590565b34801561029b57600080fd5b5061015f546001600160a01b03165b6040516001600160a01b039091168152602001610158565b3480156102ce57600080fd5b5061014e6109e4565b3480156102e357600080fd5b506101de610a98565b3480156102f857600080fd5b5061030c61030736600461254c565b610aac565b6040516101589190612712565b34801561032557600080fd5b5061012d546001600160a01b03166102aa565b34801561034457600080fd5b506101de61035336600461275c565b610b85565b34801561036457600080fd5b5061014e6103733660046122be565b600090815260fb602052604090205490565b34801561039157600080fd5b506101de6103a036600461254c565b610b90565b3480156103b157600080fd5b506101816103c036600461279a565b6001600160a01b03918216600090815260ca6020908152604080832093909416825291909152205460ff1690565b3480156103fa57600080fd5b506101de6104093660046127c8565b610ccd565b34801561041a57600080fd5b506101de61042936600461254c565b610d12565b34801561043a57600080fd5b506101de610449366004612831565b610d88565b60006001600160a01b0383166104be5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b50600081815260c9602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061051a57506001600160e01b031982166303a24d0760e21b145b806104e357506301ffc9a760e01b6001600160e01b03198316146104e3565b61015f5460408051631418a80f60e31b815290516060926001600160a01b03169163a0c540789160048083019260009291908290030181865afa158015610584573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ac9190810190612866565b6040516020016105bc91906128e8565b6040516020818303038152906040529050919050565b6001600160a01b0385163314806105ee57506105ee85336103c0565b61060a5760405162461bcd60e51b81526004016104b590612910565b6106178585858585610de8565b5050505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106675760405162461bcd60e51b81526004016104b59061295f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106b0600080516020612d82833981519152546001600160a01b031690565b6001600160a01b0316146106d65760405162461bcd60e51b81526004016104b5906129ab565b6106df81610fe4565b604080516000808252602082019092526106fb91839190610fec565b50565b61015f546001600160a01b0316331461072a5760405163062b759160e21b815260040160405180910390fd5b6107468482600160405180602001604052806000815250611157565b6107628284600160405180602001604052806000815250611157565b6001600160a01b038416600090815261016060205260409020610785908261128b565b506001600160a01b0382166000908152610160602052604090206107a9908461128b565b5060408051848152602081018390527ff7f3111fa896b22b4c2b4d808aba59e9fab4e40a697881d951f4ba91011b9df6910160405180910390a150505050565b6060815183511461084e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016104b5565b6000835167ffffffffffffffff81111561086a5761086a612342565b604051908082528060200260200182016040528015610893578160200160208202803683370190505b50905060005b845181101561090b576108de8582815181106108b7576108b76129f7565b60200260200101518583815181106108d1576108d16129f7565b602002602001015161044e565b8282815181106108f0576108f06129f7565b602090810291909101015261090481612a23565b9050610899565b509392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561095c5760405162461bcd60e51b81526004016104b59061295f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109a5600080516020612d82833981519152546001600160a01b031690565b6001600160a01b0316146109cb5760405162461bcd60e51b81526004016104b5906129ab565b6109d482610fe4565b6109e082826001610fec565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a845760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104b5565b50600080516020612d828339815191525b90565b610aa061129e565b610aaa60006112f9565b565b6001600160a01b03811660009081526101606020526040812060609190610ad29061134c565b90508067ffffffffffffffff811115610aed57610aed612342565b604051908082528060200260200182016040528015610b16578160200160208202803683370190505b50915060005b81811015610b7e576001600160a01b038416600090815261016060205260409020610b479082611356565b838281518110610b5957610b596129f7565b63ffffffff90921660209283029190910190910152610b7781612a23565b9050610b1c565b5050919050565b6109e0338383611362565b600054610100900460ff1615808015610bb05750600054600160ff909116105b80610bca5750303b158015610bca575060005460ff166001145b610c2d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104b5565b6000805460ff191660011790558015610c50576000805461ff0019166101001790555b610c58611443565b610c6061146a565b610c68611443565b61015f80546001600160a01b0319166001600160a01b03841617905580156109e0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6001600160a01b038516331480610ce95750610ce985336103c0565b610d055760405162461bcd60e51b81526004016104b590612910565b6106178585858585611499565b610d1a61129e565b6001600160a01b038116610d7f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b5565b6106fb816112f9565b61015f546001600160a01b0316331480610daa57506001600160a01b03831633145b80610dba5750610dba83336103c0565b15610dcf57610dca8383836115e3565b505050565b60405163a2e8fcdd60e01b815260040160405180910390fd5b8151835114610e4a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104b5565b6001600160a01b038416610e705760405162461bcd60e51b81526004016104b590612a3e565b33610e7f818787878787611781565b60005b8451811015610f68576000858281518110610e9f57610e9f6129f7565b602002602001015190506000858381518110610ebd57610ebd6129f7565b602090810291909101810151600084815260c9835260408082206001600160a01b038e168352909352919091205490915081811015610f0e5760405162461bcd60e51b81526004016104b590612a83565b600083815260c9602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610f4d908490612acd565b9250508190555050505080610f6190612a23565b9050610e82565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610fb8929190612ae5565b60405180910390a4610fce8187878787876118fa565b610fdc818787878787611c0c565b505050505050565b6106fb61129e565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561101f57610dca83611d68565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611079575060408051601f3d908101601f1916820190925261107691810190612b0a565b60015b6110dc5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104b5565b600080516020612d82833981519152811461114b5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104b5565b50610dca838383611e04565b6001600160a01b0384166111b75760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016104b5565b3360006111c385611e2f565b905060006111d085611e2f565b90506111e183600089858589611781565b600086815260c9602090815260408083206001600160a01b038b16845290915281208054879290611213908490612acd565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611273836000898585896118fa565b61128283600089898989611e7a565b50505050505050565b60006112978383611f35565b9392505050565b61012d546001600160a01b03163314610aaa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b5565b61012d80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006104e3825490565b60006112978383611f84565b816001600160a01b0316836001600160a01b031614156113d65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016104b5565b6001600160a01b03838116600081815260ca6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600054610100900460ff16610aaa5760405162461bcd60e51b81526004016104b590612b23565b600054610100900460ff166114915760405162461bcd60e51b81526004016104b590612b23565b610aaa611fae565b6001600160a01b0384166114bf5760405162461bcd60e51b81526004016104b590612a3e565b3360006114cb85611e2f565b905060006114d885611e2f565b90506114e8838989858589611781565b600086815260c9602090815260408083206001600160a01b038c1684529091529020548581101561152b5760405162461bcd60e51b81526004016104b590612a83565b600087815260c9602090815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061156a908490612acd565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46115ca848a8a86868a6118fa565b6115d8848a8a8a8a8a611e7a565b505050505050505050565b6001600160a01b0383166116455760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104b5565b33600061165184611e2f565b9050600061165e84611e2f565b905061167e83876000858560405180602001604052806000815250611781565b600085815260c9602090815260408083206001600160a01b038a168452909152902054848110156116fd5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104b5565b600086815260c9602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611282848860008686604051806020016040528060008152506118fa565b6001600160a01b0385166118085760005b8351811015611806578281815181106117ad576117ad6129f7565b602002602001015160fb60008684815181106117cb576117cb6129f7565b6020026020010151815260200190815260200160002060008282546117f09190612acd565b909155506117ff905081612a23565b9050611792565b505b6001600160a01b038416610fdc5760005b8351811015611282576000848281518110611836576118366129f7565b602002602001015190506000848381518110611854576118546129f7565b60200260200101519050600060fb6000848152602001908152602001600020549050818110156118d75760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016104b5565b600092835260fb6020526040909220910390556118f381612a23565b9050611819565b6001600160a01b038516158061191757506001600160a01b038416155b1561192157610fdc565b825161015f54604051632b956ff760e01b81526001600160a01b0388811660048301526000921690632b956ff790602401602060405180830381865afa15801561196f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119939190612b0a565b61015f54604051632b956ff760e01b81526001600160a01b03898116600483015292935060009290911690632b956ff790602401602060405180830381865afa1580156119e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a089190612b0a565b905060005b83811015611c06576000878281518110611a2957611a296129f7565b602090810291909101015161015f546040516331a9108f60e11b8152600481018390529192506000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa89190612b6e565b9050611ab48b8361044e565b611b3a5760408051868152602081018490527f58444cf86e8468177c22c16e3ba6fcb8aec0ac7875febb7625760f9d2f6a3f35910160405180910390a16001600160a01b038b16600090815261016060205260409020611b149083611fde565b506001600160a01b038116600090815261016060205260409020611b389086611fde565b505b6000611b46828661044e565b118015611b6c57506000888481518110611b6257611b626129f7565b6020026020010151115b15611bf35760408051858152602081018490527ff7f3111fa896b22b4c2b4d808aba59e9fab4e40a697881d951f4ba91011b9df6910160405180910390a16001600160a01b038a16600090815261016060205260409020611bcd908361128b565b506001600160a01b038116600090815261016060205260409020611bf1908561128b565b505b505080611bff90612a23565b9050611a0d565b506115d8565b6001600160a01b0384163b15610fdc5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611c509089908990889088908890600401612b8b565b6020604051808303816000875af1925050508015611c8b575060408051601f3d908101601f19168201909252611c8891810190612be9565b60015b611d3857611c97612c06565b806308c379a01415611cd15750611cac612c21565b80611cb75750611cd3565b8060405162461bcd60e51b81526004016104b5919061232f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016104b5565b6001600160e01b0319811663bc197c8160e01b146112825760405162461bcd60e51b81526004016104b590612cab565b6001600160a01b0381163b611dd55760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104b5565b600080516020612d8283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611e0d83611fea565b600082511180611e1a5750805b15610dca57611e29838361202a565b50505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611e6957611e696129f7565b602090810291909101015292915050565b6001600160a01b0384163b15610fdc5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611ebe9089908990889088908890600401612cf3565b6020604051808303816000875af1925050508015611ef9575060408051601f3d908101601f19168201909252611ef691810190612be9565b60015b611f0557611c97612c06565b6001600160e01b0319811663f23a6e6160e01b146112825760405162461bcd60e51b81526004016104b590612cab565b6000818152600183016020526040812054611f7c575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556104e3565b5060006104e3565b6000826000018281548110611f9b57611f9b6129f7565b9060005260206000200154905092915050565b600054610100900460ff16611fd55760405162461bcd60e51b81526004016104b590612b23565b610aaa336112f9565b6000611297838361211e565b611ff381611d68565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6120925760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104b5565b600080846001600160a01b0316846040516120ad9190612d38565b600060405180830381855af49150503d80600081146120e8576040519150601f19603f3d011682016040523d82523d6000602084013e6120ed565b606091505b50915091506121158282604051806060016040528060278152602001612da260279139612211565b95945050505050565b60008181526001830160205260408120548015612207576000612142600183612d54565b855490915060009061215690600190612d54565b90508181146121bb576000866000018281548110612176576121766129f7565b9060005260206000200154905080876000018481548110612199576121996129f7565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806121cc576121cc612d6b565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506104e3565b60009150506104e3565b60608315612220575081611297565b8251156122305782518084602001fd5b8160405162461bcd60e51b81526004016104b5919061232f565b6001600160a01b03811681146106fb57600080fd5b6000806040838503121561227257600080fd5b823561227d8161224a565b946020939093013593505050565b6001600160e01b0319811681146106fb57600080fd5b6000602082840312156122b357600080fd5b81356112978161228b565b6000602082840312156122d057600080fd5b5035919050565b60005b838110156122f25781810151838201526020016122da565b83811115611e295750506000910152565b6000815180845261231b8160208601602086016122d7565b601f01601f19169290920160200192915050565b6020815260006112976020830184612303565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561237e5761237e612342565b6040525050565b600067ffffffffffffffff82111561239f5761239f612342565b5060051b60200190565b600082601f8301126123ba57600080fd5b813560206123c782612385565b6040516123d48282612358565b83815260059390931b85018201928281019150868411156123f457600080fd5b8286015b8481101561240f57803583529183019183016123f8565b509695505050505050565b600067ffffffffffffffff82111561243457612434612342565b50601f01601f191660200190565b600082601f83011261245357600080fd5b813561245e8161241a565b60405161246b8282612358565b82815285602084870101111561248057600080fd5b82602086016020830137600092810160200192909252509392505050565b600080600080600060a086880312156124b657600080fd5b85356124c18161224a565b945060208601356124d18161224a565b9350604086013567ffffffffffffffff808211156124ee57600080fd5b6124fa89838a016123a9565b9450606088013591508082111561251057600080fd5b61251c89838a016123a9565b9350608088013591508082111561253257600080fd5b5061253f88828901612442565b9150509295509295909350565b60006020828403121561255e57600080fd5b81356112978161224a565b6000806000806080858703121561257f57600080fd5b843561258a8161224a565b93506020850135925060408501356125a18161224a565b9396929550929360600135925050565b600080604083850312156125c457600080fd5b823567ffffffffffffffff808211156125dc57600080fd5b818501915085601f8301126125f057600080fd5b813560206125fd82612385565b60405161260a8282612358565b83815260059390931b850182019282810191508984111561262a57600080fd5b948201945b838610156126515785356126428161224a565b8252948201949082019061262f565b9650508601359250508082111561266757600080fd5b50612674858286016123a9565b9150509250929050565b600081518084526020808501945080840160005b838110156126ae57815187529582019590820190600101612692565b509495945050505050565b602081526000611297602083018461267e565b600080604083850312156126df57600080fd5b82356126ea8161224a565b9150602083013567ffffffffffffffff81111561270657600080fd5b61267485828601612442565b6020808252825182820181905260009190848201906040850190845b8181101561275057835163ffffffff168352928401929184019160010161272e565b50909695505050505050565b6000806040838503121561276f57600080fd5b823561277a8161224a565b91506020830135801515811461278f57600080fd5b809150509250929050565b600080604083850312156127ad57600080fd5b82356127b88161224a565b9150602083013561278f8161224a565b600080600080600060a086880312156127e057600080fd5b85356127eb8161224a565b945060208601356127fb8161224a565b93506040860135925060608601359150608086013567ffffffffffffffff81111561282557600080fd5b61253f88828901612442565b60008060006060848603121561284657600080fd5b83356128518161224a565b95602085013595506040909401359392505050565b60006020828403121561287857600080fd5b815167ffffffffffffffff81111561288f57600080fd5b8201601f810184136128a057600080fd5b80516128ab8161241a565b6040516128b88282612358565b8281528660208486010111156128cd57600080fd5b6128de8360208301602087016122d7565b9695505050505050565b600082516128fa8184602087016122d7565b637b69647d60e01b920191825250600401919050565b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612a3757612a37612a0d565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115612ae057612ae0612a0d565b500190565b604081526000612af8604083018561267e565b8281036020840152612115818561267e565b600060208284031215612b1c57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215612b8057600080fd5b81516112978161224a565b6001600160a01b0386811682528516602082015260a060408201819052600090612bb79083018661267e565b8281036060840152612bc9818661267e565b90508281036080840152612bdd8185612303565b98975050505050505050565b600060208284031215612bfb57600080fd5b81516112978161228b565b600060033d1115610a955760046000803e5060005160e01c90565b600060443d1015612c2f5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612c5f57505050505090565b8285019150815181811115612c775750505050505090565b843d8701016020828501011115612c915750505050505090565b612ca060208286010187612358565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090612d2d90830184612303565b979650505050505050565b60008251612d4a8184602087016122d7565b9190910192915050565b600082821015612d6657612d66612a0d565b500390565b634e487b7160e01b600052603160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ef25e4bff4853f0aba1395c4e609e4c7716b3ebb0c4796c64ddbfc8e7e56d2b764736f6c634300080c0033";

type Tind3rMatchingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Tind3rMatchingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tind3rMatching__factory extends ContractFactory {
  constructor(...args: Tind3rMatchingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Tind3rMatching> {
    return super.deploy(overrides || {}) as Promise<Tind3rMatching>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Tind3rMatching {
    return super.attach(address) as Tind3rMatching;
  }
  override connect(signer: Signer): Tind3rMatching__factory {
    return super.connect(signer) as Tind3rMatching__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Tind3rMatchingInterface {
    return new utils.Interface(_abi) as Tind3rMatchingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tind3rMatching {
    return new Contract(address, _abi, signerOrProvider) as Tind3rMatching;
  }
}
