/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Tind3rMembership,
  Tind3rMembershipInterface,
} from "../../contracts/Tind3rMembership";

const _abi = [
  {
    inputs: [],
    name: "AlreadyLike",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "CanNotTransfer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainid",
        type: "uint256",
      },
    ],
    name: "ChainNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "ExistentProfile",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentProfile",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "image",
        type: "string",
      },
    ],
    name: "NewProfile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "image",
        type: "string",
      },
    ],
    name: "UpdateProfile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct Tind3rMembership.Tind3rProfile",
        name: "userProfile",
        type: "tuple",
      },
    ],
    name: "createProfile",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getMatches",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userA",
        type: "address",
      },
      {
        internalType: "address",
        name: "userB",
        type: "address",
      },
    ],
    name: "ifLike",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "initBaseURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userA",
        type: "address",
      },
      {
        internalType: "address",
        name: "userB",
        type: "address",
      },
    ],
    name: "isMatched",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isTind3rMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "like",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "matchingContract",
    outputs: [
      {
        internalType: "contract Tind3rMatching",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prefixURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newController",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract Tind3rMatching",
        name: "_matchingContract",
        type: "address",
      },
    ],
    name: "setMatchingContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "image",
            type: "string",
          },
        ],
        internalType: "struct Tind3rMembership.Tind3rProfile",
        name: "newProfile",
        type: "tuple",
      },
    ],
    name: "updateProfile",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endId",
        type: "uint256",
      },
    ],
    name: "userStreamIdList",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161397861004c60003960008181610cff01528181610d3f01528181610dff01528181610e3f0152610ed201526139786000f3fe60806040526004361061020f5760003560e01c806370a0823111610118578063a5b74875116100a0578063de9b05911161006f578063de9b0591146105ef578063e465c4651461060f578063e985e9c51461062f578063f2fde38b1461064f578063f62d18881461066f57600080fd5b8063a5b748751461056f578063b88d4fde1461058f578063c87b56dd146105af578063de0caed8146105cf57600080fd5b806392eefe9b116100e757806392eefe9b146104e557806395d89b4114610505578063a0c540781461051a578063a22cb4651461052f578063a3f58fc41461054f57600080fd5b806370a0823114610465578063715018a614610485578063777957781461049a5780638da5cb5b146104c757600080fd5b80632b956ff71161019b57806352d1902d1161016a57806352d1902d146103d057806353964b19146103e557806355f804b314610405578063579d5205146104255780636352211e1461044557600080fd5b80632b956ff71461035d5780633659cfe61461037d57806342842e0e1461039d5780634f1ef286146103bd57600080fd5b8063095ea7b3116101e2578063095ea7b3146102b857806318160ddd146102da5780631e88e319146102fd5780632182d9d71461031d57806323b872dd1461033d57600080fd5b806301ffc9a71461021457806303ee438c1461024957806306fdde031461026b578063081812fc14610280575b600080fd5b34801561022057600080fd5b5061023461022f366004612a45565b61068f565b60405190151581526020015b60405180910390f35b34801561025557600080fd5b5061025e6106e1565b6040516102409190612aba565b34801561027757600080fd5b5061025e610736565b34801561028c57600080fd5b506102a061029b366004612acd565b6107d1565b6040516001600160a01b039091168152602001610240565b3480156102c457600080fd5b506102d86102d3366004612afb565b61081e565b005b3480156102e657600080fd5b506102ef6108cc565b604051908152602001610240565b34801561030957600080fd5b506102ef610318366004612b27565b6108eb565b34801561032957600080fd5b506102d8610338366004612b61565b610a8d565b34801561034957600080fd5b506102d8610358366004612b7e565b610ab7565b34801561036957600080fd5b506102ef610378366004612b61565b610cb4565b34801561038957600080fd5b506102d8610398366004612b61565b610cf4565b3480156103a957600080fd5b506102d86103b8366004612b7e565b610dd4565b6102d86103cb366004612c74565b610df4565b3480156103dc57600080fd5b506102ef610ec5565b3480156103f157600080fd5b5060cd546102a0906001600160a01b031681565b34801561041157600080fd5b506102d8610420366004612cc3565b610f78565b34801561043157600080fd5b5061025e610440366004612d34565b610f8c565b34801561045157600080fd5b506102a0610460366004612acd565b610ffa565b34801561047157600080fd5b506102ef610480366004612b61565b611005565b34801561049157600080fd5b506102d861106d565b3480156104a657600080fd5b506104ba6104b5366004612b61565b611081565b6040516102409190612d56565b3480156104d357600080fd5b506097546001600160a01b03166102a0565b3480156104f157600080fd5b506102d8610500366004612b61565b6110f4565b34801561051157600080fd5b5061025e61116f565b34801561052657600080fd5b5061025e611187565b34801561053b57600080fd5b506102d861054a366004612da0565b6111c7565b34801561055b57600080fd5b5061023461056a366004612b61565b61126e565b34801561057b57600080fd5b5061023461058a366004612dde565b611281565b34801561059b57600080fd5b506102d86105aa366004612e0c565b61139a565b3480156105bb57600080fd5b5061025e6105ca366004612acd565b6113e4565b3480156105db57600080fd5b506102346105ea366004612dde565b61146a565b3480156105fb57600080fd5b506102ef61060a366004612b27565b6114b2565b34801561061b57600080fd5b506102d861062a366004612b61565b6115e4565b34801561063b57600080fd5b5061023461064a366004612dde565b61168f565b34801561065b57600080fd5b506102d861066a366004612b61565b6116cc565b34801561067b57600080fd5b506102d861068a366004612cc3565b611742565b60006301ffc9a760e01b6001600160e01b0319831614806106c057506380ac58cd60e01b6001600160e01b03198316145b806106db5750635b5e139f60e01b6001600160e01b03198316145b92915050565b606060006106ed611b26565b905080516000141561070d57505060408051602081019091526000815290565b8060ca604051602001610721929190612f4c565b60405160208183030381529060405291505090565b6060610740611b35565b600201805461074e90612e77565b80601f016020809104026020016040519081016040528092919081815260200182805461077a90612e77565b80156107c75780601f1061079c576101008083540402835291602001916107c7565b820191906000526020600020905b8154815290600101906020018083116107aa57829003601f168201915b5050505050905090565b60006107dc82611b59565b6107f9576040516333d1c03960e21b815260040160405180910390fd5b610801611b35565b60009283526006016020525060409020546001600160a01b031690565b600061082982610ffa565b9050336001600160a01b0382161461086257610845813361168f565b610862576040516367d9dca160e11b815260040160405180910390fd5b8261086b611b35565b6000848152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551849286811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a4505050565b6000806108d7611b35565b600101546108e3611b35565b540303919050565b600033816108f882611005565b11156109315761090781611b95565b604051634c5c1d7760e01b81526001600160401b0390911660048201526024015b60405180910390fd5b600061093b611bc8565b60c95460cb549192506001600160a01b03169063eaf5d04e90309060ca61096186611bd8565b610973886001600160a01b0316611cdd565b61097d8b80612f92565b61098a60208e018e612f92565b8e806040019061099a9190612f92565b6040516020016109b299989796959493929190612fee565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016109df939291906130ef565b600060405180830381600087803b1580156109f957600080fd5b505af1158015610a0d573d6000803e3d6000fd5b50505050610a1c826001611cf3565b610a268282611d0d565b807f12225c2549977681619cd7fc7e95a20e224e85d912926c995db1b10ffb4cfdeb610a528680612f92565b610a5f6020890189612f92565b610a6c60408b018b612f92565b604051610a7e9695949392919061313f565b60405180910390a29392505050565b610a95611d76565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055565b6000610ac282611dd0565b9050836001600160a01b0316816001600160a01b031614610af55760405162a1148160e81b815260040160405180910390fd5b600080610b0184611e5e565b91509150610b268187610b113390565b6001600160a01b039081169116811491141790565b610b5157610b34863361168f565b610b5157604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610b7857604051633a954ecd60e21b815260040160405180910390fd5b610b858686866001611e86565b8015610b9057600082555b610b98611b35565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610bc4611b35565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610bfb611b35565b60008681526004919091016020526040902055600160e11b8316610c6a5760018401610c25611b35565b60008281526004919091016020526040902054610c6857610c44611b35565b548114610c685783610c54611b35565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b6000610cbf82611005565b610cdc57604051631dbbc24b60e21b815260040160405180910390fd5b610ce582611b95565b6001600160401b031692915050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610d3d5760405162461bcd60e51b815260040161092890613188565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610d866000805160206138dc833981519152546001600160a01b031690565b6001600160a01b031614610dac5760405162461bcd60e51b8152600401610928906131d4565b610db581611ec9565b60408051600080825260208201909252610dd191839190611ed1565b50565b610def8383836040518060200160405280600081525061139a565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610e3d5760405162461bcd60e51b815260040161092890613188565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e866000805160206138dc833981519152546001600160a01b031690565b6001600160a01b031614610eac5760405162461bcd60e51b8152600401610928906131d4565b610eb582611ec9565b610ec182826001611ed1565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f655760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610928565b506000805160206138dc83398151915290565b610f80611d76565b610def60cc8383612922565b60606000610f98611b26565b9050805160001415610fba5750506040805160208101909152600081526106db565b8060ca610fc686611bd8565b610fcf86611bd8565b604051602001610fe29493929190613220565b60405160208183030381529060405291505092915050565b60006106db82611dd0565b60006001600160a01b03821661102e576040516323d3ad8160e21b815260040160405180910390fd5b6001600160401b0361103e611b35565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b611075611d76565b61107f600061203c565b565b60cd54604051630eef2aef60e31b81526001600160a01b0383811660048301526060921690637779577890602401600060405180830381865afa1580156110cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106db91908101906132d6565b6110fc611d76565b60c95460cb54604051638bb0ab9760e01b815230600482015260248101919091526001600160a01b03838116604483015290911690638bb0ab9790606401600060405180830381600087803b15801561115457600080fd5b505af1158015611168573d6000803e3d6000fd5b5050505050565b6060611179611b35565b600301805461074e90612e77565b60606000611193611b26565b90508051600014156111b357505060408051602081019091526000815290565b8060ca604051602001610721929190613391565b6001600160a01b0382163314156111f15760405163b06307db60e01b815260040160405180910390fd5b806111fa611b35565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60008061127a83611005565b1192915050565b60008061128d84610cb4565b9050600061129a84610cb4565b60cd54604051627eeac760e11b81526001600160a01b038881166004830152602482018490529293506000929091169062fdd58e90604401602060405180830381865afa1580156112ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131391906134a4565b118015611391575060cd54604051627eeac760e11b81526001600160a01b03868116600483015260248201859052600092169062fdd58e90604401602060405180830381865afa15801561136b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138f91906134a4565b115b95945050505050565b6113a5848484610ab7565b6001600160a01b0383163b156113de576113c18484848461208e565b6113de576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606113ef82611b59565b61140c57604051630a14c4b560e41b815260040160405180910390fd5b6000611416611187565b9050805160001415611438575050604080516020810190915260008152919050565b8061144284611bd8565b6040516020016114539291906134bd565b604051602081830303815290604052915050919050565b60008061147684610cb4565b9050600061148384610cb4565b9050600060ce8161149884604087901b613502565b815260200190815260200160002054119250505092915050565b60003360016114c082611005565b10156114df57604051631dbbc24b60e21b815260040160405180910390fd5b60006114ea82611b95565b60c95460cb546001600160401b039290921692506001600160a01b03169063eaf5d04e90309060ca61151c8980612f92565b61152960208c018c612f92565b61153660408e018e612f92565b61153f8c611bd8565b60405160200161155698979695949392919061351a565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611583939291906130ef565b600060405180830381600087803b15801561159d57600080fd5b505af11580156115b1573d6000803e3d6000fd5b508392507fb35cda172c046a68f0a6f5a1767189d1bb7aa9f8d2c26b8efe63857aba7710019150610a5290508680612f92565b336115ef8183612176565b6115f9828261146a565b15610ec15760cd546001600160a01b0316633c173a4f8261161981610cb4565b8561162387610cb4565b6040516001600160e01b031960e087901b1681526001600160a01b0394851660048201526024810193909352921660448201526064810191909152608401600060405180830381600087803b15801561167b57600080fd5b505af1158015610cac573d6000803e3d6000fd5b6000611699611b35565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6116d4611d76565b6001600160a01b0381166117395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610928565b610dd18161203c565b60008051602061392383398151915254610100900460ff16611777576000805160206139238339815191525460ff161561177b565b303b155b6117ed5760405162461bcd60e51b815260206004820152603760248201527f455243373231415f5f496e697469616c697a61626c653a20636f6e747261637460448201527f20697320616c726561647920696e697469616c697a65640000000000000000006064820152608401610928565b60008051602061392383398151915254610100900460ff1615801561182957600080516020613923833981519152805461ffff19166101011790555b600054610100900460ff16158080156118495750600054600160ff909116105b806118635750303b158015611863575060005460ff166001145b6118c65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610928565b6000805460ff1916600117905580156118e9576000805461ff0019166101001790555b6119366040518060400160405280601081526020016f054696e6433724d656d626572736869760841b8152506040518060400160405280600381526020016254334d60e81b8152506121e8565b61193e612226565b611946612255565b61194e61227c565b60c980546001600160a01b0319166001600160a01b0392909216919091179055600061197946611bd8565b60c9546040805180820182526011815270074696e6433725f6d656d6265727368697607c1b60208083019190915291519394506001600160a01b0390921692633a9151b09230926119cc928791016135db565b6040516020818303038152906040526040518363ffffffff1660e01b81526004016119f892919061368c565b6020604051808303816000875af1158015611a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3b91906134a4565b60cb8190555060405180604001604052806011815260200170074696e6433725f6d656d6265727368697607c1b81525081611a7760cb54611bd8565b604051602001611a89939291906136b0565b60405160208183030381529060405260ca9080519060200190611aad9291906129a6565b50611aba60cc8686612922565b50508015611b02576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b508015610def575050600080516020613923833981519152805461ff001916905550565b606060cc805461074e90612e77565b7f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4090565b6000611b63611b35565b54821080156106db5750600160e01b611b7a611b35565b60008481526004919091016020526040902054161592915050565b600060c0611ba1611b35565b6001600160a01b03909316600090815260059390930160205260409092205490911c919050565b6000611bd2611b35565b54919050565b606081611bfc5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c265780611c108161370a565b9150611c1f9050600a8361373b565b9150611c00565b6000816001600160401b03811115611c4057611c40612bbf565b6040519080825280601f01601f191660200182016040528015611c6a576020820181803683370190505b5090505b8415611cd557611c7f60018361374f565b9150611c8c600a86613766565b611c97906030613502565b60f81b818381518110611cac57611cac61377a565b60200101906001600160f81b031916908160001a905350611cce600a8661373b565b9450611c6e565b949350505050565b60606106db6001600160a01b0383166014612324565b610ec18282604051806020016040528060008152506124bf565b6000611d17611b35565b6001600160a01b038416600090815260059190910160205260409020546001600160c01b031660c083901b1790508181611d4f611b35565b6001600160a01b039095166000908152600595909501602052604090942093909355505050565b6097546001600160a01b0316331461107f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610928565b600081611ddb611b35565b54811015611e45576000611ded611b35565b600083815260049190910160205260409020549050600160e01b8116611e43575b80611e3c57611e1b611b35565b60001990920160008181526004939093016020526040909220549050611e0e565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b6000806000611e6b611b35565b60009485526006016020525050604090912080549092909150565b6001600160a01b03841615801590611ea657506001600160a01b03831615155b15611ec457604051631b5722f560e01b815260040160405180910390fd5b6113de565b610dd1611d76565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611f0457610def83612535565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f5e575060408051601f3d908101601f19168201909252611f5b918101906134a4565b60015b611fc15760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610928565b6000805160206138dc83398151915281146120305760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610928565b50610def8383836125d1565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906120c3903390899088908890600401613790565b6020604051808303816000875af19250505080156120fe575060408051601f3d908101601f191682019092526120fb918101906137cd565b60015b612159573d80801561212c576040519150601f19603f3d011682016040523d82523d6000602084013e612131565b606091505b508051612151576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b600061218183610cb4565b9050600061218e83610cb4565b905060006121a082604085901b613502565b600081815260ce6020526040902054909150156121d0576040516339981d3560e01b815260040160405180910390fd5b600090815260ce602052604090206001905550505050565b60008051602061392383398151915254610100900460ff1661221c5760405162461bcd60e51b8152600401610928906137ea565b610ec182826125f6565b600054610100900460ff1661224d5760405162461bcd60e51b81526004016109289061383e565b61107f612679565b600054610100900460ff1661107f5760405162461bcd60e51b81526004016109289061383e565b600046600514156122a0575073da8ea22d092307874f30a1f277d1388dca0ba97a90565b46604514156122c2575073f2c9fc73884a9c6e6db58778176ab67989139d0690565b466201388114156122e65750734b48841d4b32c4650e4abc117a03fe8b51f38f6890565b46617a691415612309575073e7f1725e7734ce288f8367e1bb143e90bb3f051290565b60405163264e42cf60e01b8152466004820152602401610928565b60606000612333836002613889565b61233e906002613502565b6001600160401b0381111561235557612355612bbf565b6040519080825280601f01601f19166020018201604052801561237f576020820181803683370190505b509050600360fc1b8160008151811061239a5761239a61377a565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106123c9576123c961377a565b60200101906001600160f81b031916908160001a90535060006123ed846002613889565b6123f8906001613502565b90505b6001811115612470576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061242c5761242c61377a565b1a60f81b8282815181106124425761244261377a565b60200101906001600160f81b031916908160001a90535060049490941c93612469816138a8565b90506123fb565b508315611e3c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610928565b6124c983836126a9565b6001600160a01b0383163b15610def5760006124e3611b35565b5490508281035b6124fd600086838060010194508661208e565b61251a576040516368d2bf6b60e11b815260040160405180910390fd5b8181106124ea578161252a611b35565b541461116857600080fd5b6001600160a01b0381163b6125a25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610928565b6000805160206138dc83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6125da836127c3565b6000825111806125e75750805b15610def576113de8383612803565b60008051602061392383398151915254610100900460ff1661262a5760405162461bcd60e51b8152600401610928906137ea565b81612633611b35565b60020190805190602001906126499291906129a6565b5080612653611b35565b60030190805190602001906126699291906129a6565b506000612674611b35565b555050565b600054610100900460ff166126a05760405162461bcd60e51b81526004016109289061383e565b61107f3361203c565b60006126b3611b35565b5490506001600160a01b0383166126dc57604051622e076360e81b815260040160405180910390fd5b816126fa5760405163b562e8dd60e01b815260040160405180910390fd5b6127076000848385611e86565b68010000000000000001820261271b611b35565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b1717612756611b35565b60008381526004919091016020526040902055808281015b6040516001830192906001600160a01b038716906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821061276e57806127ba611b35565b5550610def9050565b6127cc81612535565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61286b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610928565b600080846001600160a01b03168460405161288691906138bf565b600060405180830381855af49150503d80600081146128c1576040519150601f19603f3d011682016040523d82523d6000602084013e6128c6565b606091505b509150915061139182826040518060600160405280602781526020016138fc60279139606083156128f8575081611e3c565b8251156129085782518084602001fd5b8160405162461bcd60e51b81526004016109289190612aba565b82805461292e90612e77565b90600052602060002090601f0160209004810192826129505760008555612996565b82601f106129695782800160ff19823516178555612996565b82800160010185558215612996579182015b8281111561299657823582559160200191906001019061297b565b506129a2929150612a1a565b5090565b8280546129b290612e77565b90600052602060002090601f0160209004810192826129d45760008555612996565b82601f106129ed57805160ff1916838001178555612996565b82800160010185558215612996579182015b828111156129965782518255916020019190600101906129ff565b5b808211156129a25760008155600101612a1b565b6001600160e01b031981168114610dd157600080fd5b600060208284031215612a5757600080fd5b8135611e3c81612a2f565b60005b83811015612a7d578181015183820152602001612a65565b838111156113de5750506000910152565b60008151808452612aa6816020860160208601612a62565b601f01601f19169290920160200192915050565b602081526000611e3c6020830184612a8e565b600060208284031215612adf57600080fd5b5035919050565b6001600160a01b0381168114610dd157600080fd5b60008060408385031215612b0e57600080fd5b8235612b1981612ae6565b946020939093013593505050565b600060208284031215612b3957600080fd5b81356001600160401b03811115612b4f57600080fd5b820160608185031215611e3c57600080fd5b600060208284031215612b7357600080fd5b8135611e3c81612ae6565b600080600060608486031215612b9357600080fd5b8335612b9e81612ae6565b92506020840135612bae81612ae6565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612bfd57612bfd612bbf565b604052919050565b600082601f830112612c1657600080fd5b81356001600160401b03811115612c2f57612c2f612bbf565b612c42601f8201601f1916602001612bd5565b818152846020838601011115612c5757600080fd5b816020850160208301376000918101602001919091529392505050565b60008060408385031215612c8757600080fd5b8235612c9281612ae6565b915060208301356001600160401b03811115612cad57600080fd5b612cb985828601612c05565b9150509250929050565b60008060208385031215612cd657600080fd5b82356001600160401b0380821115612ced57600080fd5b818501915085601f830112612d0157600080fd5b813581811115612d1057600080fd5b866020828501011115612d2257600080fd5b60209290920196919550909350505050565b60008060408385031215612d4757600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015612d9457835163ffffffff1683529284019291840191600101612d72565b50909695505050505050565b60008060408385031215612db357600080fd5b8235612dbe81612ae6565b915060208301358015158114612dd357600080fd5b809150509250929050565b60008060408385031215612df157600080fd5b8235612dfc81612ae6565b91506020830135612dd381612ae6565b60008060008060808587031215612e2257600080fd5b8435612e2d81612ae6565b93506020850135612e3d81612ae6565b92506040850135915060608501356001600160401b03811115612e5f57600080fd5b612e6b87828801612c05565b91505092959194509250565b600181811c90821680612e8b57607f821691505b60208210811415612eac57634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c9080831680612ecc57607f831692505b6020808410821415612eee57634e487b7160e01b600052602260045260246000fd5b818015612f025760018114612f1357612f40565b60ff19861689528489019650612f40565b60008881526020902060005b86811015612f385781548b820152908501908301612f1f565b505084890196505b50505050505092915050565b60008351612f5e818460208801612a62565b7f6d6f64653d6c69737426733d53454c4543542b2a2b46524f4d2b000000000000908301908152611391601a820185612eb2565b6000808335601e19843603018112612fa957600080fd5b8301803591506001600160401b03821115612fc357600080fd5b602001915036819003821315612fd857600080fd5b9250929050565b81818437506000910190815290565b6b024a729a2a92a1024a72a27960a51b8152600061300f600c83018c612eb2565b7f202869642c206f776e65722c206e616d652c206465736372697074696f6e2c2081526e0d2dac2ceca5240ac8298aa8aa6405608b1b60208201528a5161305d81602f840160208f01612a62565b622c202760e81b602f92909101918201528951613081816032840160208e01612a62565b63272c202760e01b603292909101918201528789603683013763272c202760e01b6036918901918201526130b9603a82018789612fdf565b63272c202760e01b815290506130d3600482018587612fdf565b6227293b60e81b81526003019c9b505050505050505050505050565b60018060a01b03841681528260208201526060604082015260006113916060830184612a8e565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600061315360608301888a613116565b8281036020840152613166818789613116565b9050828103604084015261317b818587613116565b9998505050505050505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60008551613232818460208a01612a62565b6936b7b2329eb634b9ba1360b11b9083019081527f733d53454c4543542b6465736372697074696f6e2b46524f4d2b000000000000600a8201526132796024820187612eb2565b90506a2b57484552452b69643e3d60a81b8152845161329f81600b840160208901612a62565b670ad053910ada590f60c21b600b929091019182015283516132c8816013840160208801612a62565b016013019695505050505050565b600060208083850312156132e957600080fd5b82516001600160401b038082111561330057600080fd5b818501915085601f83011261331457600080fd5b81518181111561332657613326612bbf565b8060051b9150613337848301612bd5565b818152918301840191848101908884111561335157600080fd5b938501935b83851015613385578451925063ffffffff831683146133755760008081fd5b8282529385019390850190613356565b98975050505050505050565b600083516133a3818460208801612a62565b6936b7b2329eb634b9ba1360b11b90830190815268733d53454c4543542b60b81b600a8201526d0d4e6dedcbedec4d4cac6e84a64760931b60138201526f2532376964253237253243696425324360801b6021820152732532376e616d652532372532436e616d6525324360601b60318201527f2532376465736372697074696f6e2532372532436465736372697074696f6e25604582015261324360f01b60658201527f253237696d616765253237253243696d6167652532392b00000000000000000060678201526446524f4d2b60d81b607e8201526134886083820185612eb2565b692b57484552452b69643d60b01b8152600a0195945050505050565b6000602082840312156134b657600080fd5b5051919050565b600083516134cf818460208801612a62565b8351908301906134e3818360208801612a62565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115613515576135156134ec565b500190565b6602aa82220aa22960cd1b81526000613536600783018b612eb2565b6a20534554206e616d653d2760a81b8152888a600b8301376f272c206465736372697074696f6e3d2760801b600b918a01918201528688601b83013769272c20696d6167653d2760b01b601b91880191820152848660258301376a272057484552452069643d60a81b60259186019182015283516135bb816030840160208801612a62565b603b60f81b603092909101918201526031019a9950505050505050505050565b6c021a922a0aa22902a20a126229609d1b81526000835161360381600d850160208801612a62565b605f60f81b600d91840191820152835161362481600e840160208801612a62565b7f2028696420696e74656765722c206f776e657220746578742c206e616d652074600e92909101918201527f6578742c206465736372697074696f6e20746578742c20696d61676520746578602e8201526274293b60e81b604e820152605101949350505050565b6001600160a01b0383168152604060208201819052600090611cd590830184612a8e565b600084516136c2818460208901612a62565b8083019050605f60f81b80825285516136e2816001850160208a01612a62565b600192019182015283516136fd816002840160208801612a62565b0160020195945050505050565b600060001982141561371e5761371e6134ec565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261374a5761374a613725565b500490565b600082821015613761576137616134ec565b500390565b60008261377557613775613725565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906137c390830184612a8e565b9695505050505050565b6000602082840312156137df57600080fd5b8151611e3c81612a2f565b60208082526034908201527f455243373231415f5f496e697469616c697a61626c653a20636f6e7472616374604082015273206973206e6f7420696e697469616c697a696e6760601b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008160001904831182151516156138a3576138a36134ec565b500290565b6000816138b7576138b76134ec565b506000190190565b600082516138d1818460208701612a62565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564ee151c8401928dc223602bb187aff91b9a56c7cae5476ef1b3287b085a16c85fa2646970667358221220cd825f25e023400e205c4ae7e799add0759813d5471253333d1aa994595f412b64736f6c634300080c0033";

type Tind3rMembershipConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Tind3rMembershipConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Tind3rMembership__factory extends ContractFactory {
  constructor(...args: Tind3rMembershipConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Tind3rMembership> {
    return super.deploy(overrides || {}) as Promise<Tind3rMembership>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Tind3rMembership {
    return super.attach(address) as Tind3rMembership;
  }
  override connect(signer: Signer): Tind3rMembership__factory {
    return super.connect(signer) as Tind3rMembership__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Tind3rMembershipInterface {
    return new utils.Interface(_abi) as Tind3rMembershipInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Tind3rMembership {
    return new Contract(address, _abi, signerOrProvider) as Tind3rMembership;
  }
}
